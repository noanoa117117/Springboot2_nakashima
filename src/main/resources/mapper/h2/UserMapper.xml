<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- UserMapperとxmlのマッピング -->
<mapper namespace="com.example.repository.UserMapper">

	<!-- マッピング定義 resultMap=select結果とjavaクラスをマッピング,Id=は任意だがresultMapと -->
	<resultMap type="com.example.domain.user.model.MUser"
		id="user">
		<!-- column=select結果のカラム名,property=Javaクラスのフィールド名 -->
		<id column="user_id" property="userId" />
		<result column="password" property="password" />
		<result column="user_name" property="userName" />
		<result column="birthday" property="birthday" />
		<result column="age" property="age" />
		<result column="gender" property="gender" />
		<result column="department_Id" property="departmentId" />
		<result column="role" property="role" />
		<!-- association は1つのテーブルと結合 -->
		<association property="department" resultMap="department"></association>
		<!-- マッピング定義内に別のマッピング定義を入れれる,columnPrefixカラム名の重複を避けるために別名をつける -->
		<collection property="salaryList" resultMap="salary"
			columnPrefix="salary_" />
	</resultMap>

	<!-- マッピング定義(部署 -->
	<resultMap type="com.example.domain.user.model.Department"
		id="department">
		<id column="department_id" property="departmentId" />
		<result column="department_name" property="departmentName" />
	</resultMap>

	<!-- マッピング定義(給料) -->
	<resultMap type="com.example.domain.user.model.Salary"
		id="salary">
		<id column="user_id" property="userId" />
		<id column="year_month" property="yearMonth" />
		<result column="salary" property="salary" />
	</resultMap>

	<!-- ユーザー一件登録 -->
	<insert id="insertOne">
		insert into m_user(
		user_id
		,password
		,user_name
		,birthday
		,age
		,gender
		,department_id
		,role
		)
		values(
		#{userId}
		,#{password}
		,#{userName}
		,#{birthday}
		,#{age}
		,#{gender}
		,#{departmentId}
		,#{role}
		)
	</insert>

	<!-- ユーザー複数取得 where句のifが1つでもtrueならwhereを追加 -->
	<select id="findMany" resultType="MUser">
		select
		*
		from
		m_user
		<where>
			<if test="userId != null">
				user_id like '%' || #{userId} || '%'
			</if>
			<if test="userName != null">
				and user_name like '%' || #{userName} || '%'
			</if>
		</where>
	</select>

	<!-- ユーザー一件検索 resultMap=の値は上のIdの値と一致させる -->
	<select id="findOne" resultMap="user">
		select
		m_user.user_id
		,m_user.password
		,m_user.user_name
		,m_user.birthday
		,m_user.age
		,m_user.gender
		,m_department.department_id
		,m_department.department_name
		
		,t_salary.user_id as salary_user_id
		,t_salary.year_month as salary_year_month
		,t_salary.salary as salary_salary
		from
		m_user
		left join
		m_department
		on
		m_user.department_id = m_department.department_id
		left join t_salary
		on
		m_user.user_id = t_salary.user_id
		where
		m_user.user_id =
		#{userId}
	</select>

	<!-- ユーザー一件更新 @paramで指定した値をSQL内に埋め込める #{パラメータ} -->
	<update id="updateOne">
		update
		m_user
		set
		password = #{password}
		,user_name =
		#{userName}
		where
		user_id = #{userId}
	</update>
	<!-- ユーザー一件削除 -->
	<delete id="deleteOne">
		delete from
		m_user
		where
		user_id = #{userId}
	</delete>

</mapper>